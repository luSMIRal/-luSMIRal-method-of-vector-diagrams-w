let angle = -51.5; 
let x = 150;
let y = 0;
// let dx = 0;
// let dy = 5;
// let x1 = 0;
// let y1 = 0;

let a = 140; // горизонтальная полуось окружности
let b = 140; // вертикальная полуось окружности
let angle1 = 0; 

// срздаем холст
function setup() {
  createCanvas(1000, 500);
  angleMode(DEGREES);
}

function draw() {
  background(0);

  //задаем функции для движения 
  var x2 = a*cos(angle1); //функции для задания движения красной точки
  var y2 = b*sin(angle1);
  angle1 = angle1+2;
    
  push();
  translate(200, 200); // положение центра фигуры
  stroke(''); //цвет по умолчанию, белый
  noFill(); // убираем внутреннее часть фигуры
  ellipse(0, 0, 2*a, 2*b); //строим окружность (x0, y0, ширина, высота)
  line(0, 0, 140, 0);
  noStroke();
  fill(255,0,0);
  ellipse(0, y, 8); //красная точка
  ellipse(0, 0, 4); //центр окружности
  stroke(255,0,0); //?
  line(0, 0, 0, y); //линия от центра до красной точки
  fill(100, 100); //
  arc(0, 0, a/2, a/2, 0, -angle1); //задаем вращение для сектора
  line(0, y, x2, y); //горизонтальная линия от красной точки
  pop();

  push();
  translate(200, 200);// положение центра фигуры
  stroke('');//цвет по умолчанию, белый
  line(0, y, x, y); //линия от красноу точки до синей точки
  pop();

  //вспомогательные линии для достроения прямоугольника, получающегося при сложении зеленого и красного векторов
  push();
  translate(200, 200); // положение центра фигуры
  rotate(-angle); // задаем вращение конструкции с угловой скоростью=-angle
  stroke('yellow')//задаем желтый цвет линии 1
  line(87, -51, 87.5, -110);//линия 1 
  stroke('yellow');//задаем желтый цвет линии 2
  line(0, -60, 87.5, -110);//линия 2
  pop();  
  
  //синяя стрелка
  push();
  translate(200, 200);// положение центра фигуры
  rotate(-angle); // задаем вращение стрелки с угловой скоростью=-angle
  rotate(-51.5);//поворачиваем стрелку на угол
  stroke('blue');//задаем синий цвет линии
  line(0, 0, 140, 0);//задаем положение линии
  fill('blue');//задаем синий цвет треугольнику
  triangle(133, -5, 140, 0, 133,  5);//наконечник стрелки(треуголиник)
  pop();
   
  
  push();
  translate(200, 200);// положение центра фигуры
  rotate(-angle);// задаем вращение стрелки с угловой скоростью=-angle
  
  //зеленая стрелка
  stroke('lightgreen');//задаем зеленый цвет линии
  line(0, 0, 0, -60);//задаем положение линию
  fill('lightgreen');//задаем зеленый цвет треугольнику
  triangle(-5, -53, 0, -60, 5,  -53);//наконечник стрелки(треуголиник)
  
  //красная стрелка
  rotate(-30);//поворачиваем красную стрелку на угол
  stroke('red');//задаем красный цвет линии
  line(0, 0, 100, 0);//задаем положение линию
  fill('red');//задаем красный цвет треугольнику
  triangle(93, -5, 100, 0, 93,  5);//наконечник стрелки(треуголиник)
  pop();
 
  angle = angle + 2;//задаем угловую скорость 

  //синяя точка, движущаяся по траектории синусоиды
  push();
  translate(200, 200);// положение центра фигуры
  fill('blue');//цвет
  ellipse(x, y, 10, 10);//задаем положение и движение точки
  frameRate(30); //частота кадров
  
  //функция для движения синей точки
  x += 1;
  y = -135 * Math.cos(2 * x * Math.PI/180);

//условие возврата синей точки в к начальному положению,если достигнут край холста
  // x = x + dx;
  if (x> 1000) {
    x = x;
  }
  y = -cos(x)+y;
  if (y > 500) {
    y =y;
  }
  pop();

  
  // push();
  // translate(200, 200);
  // fill('blue');
  
  // let ctx = canvas.getContext("2d")		
	
	// // let x1 = 0
	// // let y2 = 0	
	
	// // ctx.fillStyle = "black"
	// // ctx.fillRect(0, 0, 400, 400)	

	// let render = function(){		
	
	// 	x += 0.01;
		
	// 	y = -135 * Math.cos(2* x * Math.PI/180);		
		
	// 	ctx.fillStyle = "lime"
	// 	ctx.fillRect(x, y, 5, 5)
		
	// 	requestAnimationFrame(render)
	// }
	// render()
 
  // pop();
  
  //координатная плоскость для построения графика функции движения синей точки
  push();
  translate(200, 200);// положение центра фигуры
  stroke('');//цвет стандартный
  line(150, 0, 800, 0);//линии
  line(150, -140, 800, -140);
  line(150, 140, 800, 140);
  line(150, -140, 150, 140);
  pop();
}
